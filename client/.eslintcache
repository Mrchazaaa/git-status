[{"/home/pi/workspace/git-status/client/src/index.js":"1","/home/pi/workspace/git-status/client/src/Failure.js":"2","/home/pi/workspace/git-status/client/src/Success.js":"3","/home/pi/workspace/git-status/client/src/GifWithText.js":"4","/home/pi/workspace/git-status/client/src/Text.js":"5"},{"size":518,"mtime":1637262749950,"results":"6","hashOfConfig":"7"},{"size":589,"mtime":1637262749950,"results":"8","hashOfConfig":"7"},{"size":564,"mtime":1637262749950,"results":"9","hashOfConfig":"7"},{"size":805,"mtime":1637262749950,"results":"10","hashOfConfig":"7"},{"size":846,"mtime":1637262749950,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"zab5uk",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/home/pi/workspace/git-status/client/src/index.js",[],["26","27"],"/home/pi/workspace/git-status/client/src/Failure.js",["28"],"import './App.css';\nimport React from 'react';\nimport GifWithText from './GifWithText';\nimport { useParams } from \"react-router-dom\";\n\nconst RED = \"#cc3232\";\n\nfunction Failure() {\n    const { message } = useParams();\n\n    console.log(\"n word\");\n\n    const [gifMessage, setGifMessage] = React.useState(message);\n\n    return (\n        <div id=\"background\" style={{backgroundColor: RED}}>\n            {gifMessage && (<GifWithText text={gifMessage} request={Date.now()} theme={\"failed\"}/>)}\n            <div id=\"foreground\">\n            </div>\n        </div>\n    );\n}\n\nexport default Failure;\n","/home/pi/workspace/git-status/client/src/Success.js",["29"],"import './App.css';\nimport React from 'react';\nimport GifWithText from './GifWithText';\nimport { useParams } from \"react-router-dom\";\n\nconst GREEN = \"#99c140\";\n\nfunction Success() {\n    const { message } = useParams();\n\n    const [gifMessage, setGifMessage] = React.useState(message);\n\n    return (\n        <div id=\"background\" style={{backgroundColor: GREEN}}>\n            {gifMessage && (<GifWithText text={gifMessage} request={Date.now()} theme={\"happy\"}/>)}\n            <div id=\"foreground\">\n            </div>\n        </div>\n    );\n}\n\nexport default Success;\n","/home/pi/workspace/git-status/client/src/GifWithText.js",[],"/home/pi/workspace/git-status/client/src/Text.js",["30","31"],"import './Text.css';\nimport React from 'react';\nimport TextTransition, { presets } from \"react-text-transition\";\n\nfunction getRandomPreset() {\n    var index = Math.floor((Math.random() * 4));\n    switch (index) {\n        case 0:\n            return presets.default;\n        case 1:\n            return presets.gentle;\n        case 2:\n            return presets.wobbly;\n        case 3:\n            return presets.stiff;\n        case 4:\n            return presets.slow;\n        case 4:\n            return presets.molasses;\n    }\n}\n\nfunction Text({text, duration}) {\n    \n    return (\n        <div style={{backgroundColor: \"white\"}}>\n            <h1>\n                <TextTransition\n                    text={text}\n                    springConfig={getRandomPreset()}\n                />\n            </h1>\n        </div>\n    );\n}\n\nexport default Text;\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":13,"column":24,"nodeType":"38","messageId":"39","endLine":13,"endColumn":37},{"ruleId":"36","severity":1,"message":"37","line":11,"column":24,"nodeType":"38","messageId":"39","endLine":11,"endColumn":37},{"ruleId":"40","severity":1,"message":"41","line":7,"column":5,"nodeType":"42","messageId":"43","endLine":20,"endColumn":6},{"ruleId":"44","severity":1,"message":"45","line":18,"column":9,"nodeType":"46","messageId":"47","endLine":19,"endColumn":37},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'setGifMessage' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-global-assign","no-unsafe-negation"]