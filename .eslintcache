[{"/home/mrchazaaa/workspace/website/git-status/src/index.js":"1","/home/mrchazaaa/workspace/website/git-status/src/App.js":"2","/home/mrchazaaa/workspace/website/git-status/src/reportWebVitals.js":"3","/home/mrchazaaa/workspace/website/git-status/src/Text.js":"4","/home/mrchazaaa/workspace/website/git-status/src/GifWithText.js":"5"},{"size":500,"mtime":1607546709463,"results":"6","hashOfConfig":"7"},{"size":2186,"mtime":1607897787763,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1607546709463,"results":"9","hashOfConfig":"7"},{"size":846,"mtime":1607638091230,"results":"10","hashOfConfig":"7"},{"size":990,"mtime":1607890304432,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"97l8km",{"filePath":"15","messages":"16","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"/home/mrchazaaa/workspace/website/git-status/src/index.js",[],["25","26"],"/home/mrchazaaa/workspace/website/git-status/src/App.js",["27"],"/home/mrchazaaa/workspace/website/git-status/src/reportWebVitals.js",[],"/home/mrchazaaa/workspace/website/git-status/src/Text.js",["28","29"],"import './Text.css';\nimport React from 'react';\nimport TextTransition, { presets } from \"react-text-transition\";\n\nfunction getRandomPreset() {\n    var index = Math.floor((Math.random() * 4));\n    switch (index) {\n        case 0:\n            return presets.default;\n        case 1:\n            return presets.gentle;\n        case 2:\n            return presets.wobbly;\n        case 3:\n            return presets.stiff;\n        case 4:\n            return presets.slow;\n        case 4:\n            return presets.molasses;\n    }\n}\n\nfunction Text({text, duration}) {\n    \n    return (\n        <div style={{backgroundColor: \"white\"}}>\n            <h1>\n                <TextTransition\n                    text={text}\n                    springConfig={getRandomPreset()}\n                />\n            </h1>\n        </div>\n    );\n}\n\nexport default Text;\n","/home/mrchazaaa/workspace/website/git-status/src/GifWithText.js",["30","31"],"import React from 'react';\nimport { GiphyFetch } from \"@giphy/js-fetch-api\";\nimport { Gif } from \"@giphy/react-components\";\nimport Text from \"./Text\";\nimport { useAsync } from \"react-async-hook\";\nimport keys from './keys.json';\n\nconst giphyFetch = new GiphyFetch(keys.gifyKey);\n\nfunction GifWithText({text, request, duration, onClose}) {\n    const [gif, setGif] = React.useState(null);\n\n    React.useEffect(() => {\n        // useAsync(async () => {\n        async function fetchGif() {\n            const {data} = await giphyFetch.random({ tag: 'happy' });\n            setGif(data);\n        }\n\n        fetchGif();\n        setTimeout(() => {\n            setGif(null);\n            onClose();\n        }, duration);\n    }, [text, request]);\n\n    return (<div>\n            {gif && <div>\n                <Gif gif={gif} noLink={true} height={\"95%\"} className={\"gif popup\"} />\n                <Text className=\"popup\" text={text}/>\n            </div>};\n        </div>);\n}\n\nexport default GifWithText;\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":null,"fatal":true,"severity":2,"message":"36","line":33,"column":63},{"ruleId":"37","severity":1,"message":"38","line":7,"column":5,"nodeType":"39","messageId":"40","endLine":20,"endColumn":6},{"ruleId":"41","severity":1,"message":"42","line":18,"column":9,"nodeType":"43","messageId":"44","endLine":19,"endColumn":37},{"ruleId":"45","severity":1,"message":"46","line":5,"column":10,"nodeType":"47","messageId":"48","endLine":5,"endColumn":18},{"ruleId":"49","severity":1,"message":"50","line":25,"column":8,"nodeType":"51","endLine":25,"endColumn":23,"suggestions":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"Parsing error: 'await' is only allowed within async functions\n\n\u001b[0m \u001b[90m 31 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m id\u001b[33m=\u001b[39m\u001b[32m\"background\"\u001b[39m style\u001b[33m=\u001b[39m{{backgroundColor\u001b[33m:\u001b[39m backgroundColor}}\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 32 | \u001b[39m            {\u001b[90m/* {gifMessage && (<GifWithText text={gifMessage} request={Date.now()} duration={5000} onClose={() => setGifMessage(null)}/>)} */\u001b[39m}\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 33 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33mimg\u001b[39m style\u001b[33m=\u001b[39m{{height\u001b[33m:\u001b[39m \u001b[32m\"100%\"\u001b[39m\u001b[33m,\u001b[39m width\u001b[33m:\u001b[39m \u001b[32m\"100%\"\u001b[39m}} src\u001b[33m=\u001b[39m{await \u001b[36mimport\u001b[39m(\u001b[32m'./logo.svg'\u001b[39m)}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 | \u001b[39m            \u001b[33m<\u001b[39m\u001b[33mdiv\u001b[39m id\u001b[33m=\u001b[39m\u001b[32m\"foreground\"\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 35 | \u001b[39m                \u001b[33m<\u001b[39m\u001b[33mbutton\u001b[39m onClick\u001b[33m=\u001b[39m{() \u001b[33m=>\u001b[39m setBackgroundColor(\u001b[33mGREEN\u001b[39m)} className\u001b[33m=\u001b[39m\u001b[32m\"button\"\u001b[39m\u001b[33m>\u001b[39m\u001b[33mChange\u001b[39m to green\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mbutton\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 36 | \u001b[39m                \u001b[33m<\u001b[39m\u001b[33mbutton\u001b[39m onClick\u001b[33m=\u001b[39m{() \u001b[33m=>\u001b[39m setBackgroundColor(\u001b[33mRED\u001b[39m)} className\u001b[33m=\u001b[39m\u001b[32m\"button\"\u001b[39m\u001b[33m>\u001b[39m\u001b[33mChange\u001b[39m to red\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mbutton\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-unused-vars","'useAsync' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'duration' and 'onClose'. Either include them or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [text, request, duration, onClose]",{"range":"58","text":"59"},[717,732],"[text, request, duration, onClose]"]